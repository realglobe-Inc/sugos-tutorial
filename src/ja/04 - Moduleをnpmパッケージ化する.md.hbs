# {{prefix}} {{{cur.name}}}

[前回のチュートリアル]({{{prev.url}}})では、Browser間の通信を実装しました。

さて、これまでのチュートリアルはActorの宣言時に、提供するModuleを毎回その場で定義していました。
しかし実際にアプリケーションを作るとなると、Moduleを使い回したくなる場合が多々あります。

そこで今回は、Moduleを単体のプロジェクトとして生成し、npmパッケージとして配布します。


<a href="{{{cur.url}}}">
<img src="{{{imgDir}}}/eyecatch-package.jpg"
     alt="eyecatch"
     height="{{eyecatchHeight}}"
     style="height:{{eyecatchHeight}}px"
/></a>

{{#if toc}}
## {{{tocTitle}}}
{{{toc}}}
{{/if}}


## 事前準備

まずは[sugo-scaffold]({{{links.sugo-scaffold}}})コマンドラインツールをインストールします。
これを使うと、SUGOS関連のプロジェクトの雛形が簡単に作成できます。

```bash
{{{read 'example/tutorial-04/install-globals.sh'}}}
```

## 実装してみる

コマンドラインで`sugo-scaffold <type> <dircotry>`を実行すると対話シェルが始まり、それに答えると雛形が生成できます。

まずは以下のようにModuleプロジェクトを用意します。

```bash
{{{read 'example/tutorial-04/init-project.sh'}}}
```


( 編集中... )


## まとめ

+ [sugo-scaffold]({{{links.sugo-scaffold}}})で雛形が生成できる


## おまけ

### 雑談: Javascriptの関数でキーワード引数みたいなことをしてみる

例えばPythonだと[Keyword Arguments](https://docs.python.org/3/tutorial/controlflow.html#keyword-arguments)なる仕様があって、
引数がいっぱい関数をうまく記述できるようになっているのです。

```python
# Keyword-arguments example of Python
def do_something(src, dest, **keywords):
  force = keywords.pop('force', false)
  mkdirp = keywords.pop('mkdirp', true)
  print('Do something with args: ', src, dest, force)

do_something('foo.txt', 'bar.txt', force=false, mkdirp=false)
```

これと同じようなことをJavaScriptでやろうとするとそれはもう大変でした。ES2015が使えるようになるまではね。

Node.js6から導入された[ES2015のDestructuring assignment](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment)機能を使うと、

```javascript
// Example JavasScript, after ES2015
function doSomething (src, dest, options = {}) {
  let {
    force = false,
    mkdirp = true
  } = options
  console.log('Do something with args: ', src, dest, force)
}
doSomething('foo.txt', 'bar.txt', { force: false, mkdirp: false })
````

といった感じで、pythonと大差ない形でかけます。
もちろん[preset-es2015でバベれ](https://babeljs.io/docs/plugins/preset-es2015/)ばブラウザでも動きます。

昔だったら

```javascript
// Example JavasScript, before ES2015
function doSomething (src, dest, options) {
  if(typeof options === 'undefined') {
    options = {}
  }
  var force = typeof options.force === 'undefined' ? false : options.force
  var mkdirp = typeof options.mkdirp === 'undefined' ? false : options.mkdirp
  console.log('Do something with args: ', src, dest, force)
}
doSomething('foo.txt', 'bar.txt', { force: false, mkdirp: false })
```

とか書いていたのに。もう携帯電話がなかった時代と同じくらい遠く感じますね。



## これも読みたい

+ 前回: [{{{prev.name}}}]({{{prev.url}}})
+ 次回: [{{{next.name}}}]({{{next.url}}})

## リンク

+ [SUGOS]({{{links.sugos}}})
+ [SUGO-Actor]({{{links.sugo-actor}}})
+ [SUGO-Scaffold]({{{links.sugo-scaffold}}})
+ Tutorials
{{#each markdowns}}
  + [{{{name}}}]({{{url}}})
{{/each}}